{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","liked","allPosts","react_default","a","createElement","className","SearchPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","onUpdateSearch","bind","assertThisInitialized","e","target","value","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","_this2","map","_this2$props","filter","onFilterSelect","clazz","concat","key","onClick","PostListItem","_this$props","onDelete","onToggleImportant","onToggleLiked","like","classNames","important","PostList","posts","elements","item","id","itemProps","objectWithoutProperties","components_post_list_item","assign","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","toConsumableArray","slice","body","newItem","_ref2","_ref3","old","objectSpread","_ref4","items","length","indexOf","_this$state","visiblePosts","filterPost","searchPost","components_app_header","components_search_panel","components_post_status_filter","components_post_list","components_post_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.e3fb7d9e.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Вставьте здесь ваше имя</h1>\r\n            <h2>{allPosts} записей, из них понравилось {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css'\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e){\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Поиск по записям\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './post-status-filter.css';\r\n\r\n\r\nexport default class PostStatusFilter extends Component {\r\n     constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.buttons = [\r\n\t\t\t{name: 'all', label: 'Все'},\r\n\t\t\t{name: 'like', label: 'Понравилось'}\r\n        ];\r\n     }\r\n    render() {\r\n\r\n\t\tconst buttons = this.buttons.map(({name, label}) => {\r\n            const {filter, onFilterSelect} = this.props;\r\n\t\t\tconst active = filter === name;\r\n\t\t\tconst clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n\t\t\treturn (\r\n\t\t\t\t<button type='button'\r\n\t\t\t\t \tclassName={`btn ${clazz}`}\r\n\t\t\t\t\tkey={name}\r\n\t\t\t\t\tonClick={() => onFilterSelect(name)}>\r\n\t\t\t\t\t{label}</button>\r\n\t\t\t)\r\n\t\t});\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, {Component} from 'react';\r\n\r\nimport './post-list-item.css'\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLiked, like, important} = this.props;\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) {\r\n            classNames +=' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames +=' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                className=\"app-list-item-label\"\r\n                onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-star btn-sm\"\r\n                    onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn-trash btn-sm\"\r\n                    onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n}\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\n\r\nimport PostListItem from '../post-list-item';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLiked}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <PostListItem \r\n                    {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}/>\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css'\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <form \r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Добавить\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import App from './app'\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label: 'Going to learn React', important: true, like: false, id: 1},\r\n                {label: 'That is so good', important: false, like: false, id: 2},\r\n                {label: 'I need a break...', important: false, like: false, id: 3}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        }); \r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        }); \r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({term})\r\n    }\r\n    \r\n    onFilterSelect(filter){\r\n        this.setState({filter})\r\n    }\r\n\r\n    render() {\r\n        const {data, term, filter} = this.state;\r\n\r\n        const liked = data.filter((item) => item.like).length;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader liked={liked} allPosts={allPosts}/>\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel\r\n                        onUpdateSearch={this.onUpdateSearch}/>\r\n                    <PostStatusFilter\r\n                        filter={filter}\r\n                        onFilterSelect={this.onFilterSelect}/>\r\n                </div>\r\n                <PostList \r\n                posts={visiblePosts}\r\n                onDelete={this.deleteItem}\r\n                onToggleImportant={this.onToggleImportant}\r\n                onToggleLiked={this.onToggleLiked}/>\r\n                <PostAddForm\r\n                onAdd={this.addItem}/>\r\n            </div>\r\n         )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './components/app/';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}